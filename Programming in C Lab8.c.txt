//Marina DelVecchio
#include <stdio.h>

//declaration of the struct as a local variable so it can be used in all functions
typedef struct rational {
    int num;
    int den;
}rational;

//input function
void input(struct rational * r) {
    int temp_num;
    int temp_den;
    printf("input numerator: ");
    scanf("%d", &temp_num);
    printf("input denominator: ");
    scanf("%d", &temp_den);
    (*r).num=temp_num;
    (*r).den=temp_den;
}

//output function
void output(struct rational * r) {
    printf("\n%d/%d", (*r).num, (*r).den);
}

//add function
void add(struct rational * r1, struct rational * r2, struct rational * r3) {
    //changes each fraction to have common denominators then adds numerators
    int com_den = (*r1).den*(*r2).den;
    int r1_num = (*r1).num*(*r2).den;
    int r2_num = (*r2).num*(*r1).den;
    (*r3).den = com_den;
    (*r3).num = r1_num+r2_num;
}

//multiply function
void multiply(struct rational * r1, struct rational * r2, struct rational * r3) {
    (*r3).num = (*r1).num * (*r2).num;
    (*r3).den = (*r1).den * (*r2).den;
}

//main to test functions with a loop
int main() {
    char con;
    char dummy;
    printf("Do you want to run the program? (y/n) ");
    scanf("%c", &con);
    scanf("%c", &dummy);
    while(con=='y') {
        struct rational r1;
        struct rational r2;
        struct rational r3;

        input(&r1);
        input(&r2);

        int choice;
        printf("Enter 1 for add and 2 for multiply: ");
        scanf("%d", &choice);

        if(choice==1) {
            add(&r1, &r2, &r3);
            printf("sum:");
            output(&r3);
        }
        else {
            multiply(&r1, &r2, &r3);
            printf("product:");
            output(&r3);
        }
        printf("\n\nDo you want to run the program? (y/n) ");
        scanf("%c", &dummy);
        scanf("%c", &con);
    }
    printf("Have a nice day.");
    return 0;
}